@page "/urlmapping"
@using System.Net.Http.Json
@inject HttpClient Http

<PageTitle>Mapeo de URLs</PageTitle>

<div class="container mt-4">
    <h1 class="text-primary">📌 URLs Acortadas</h1>

    @if (urls == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
        <table class="table table-hover shadow-sm rounded">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>URL Original</th>
                    <th>URL Acortada</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var url in urls)
                {
                    <tr>
                        <td>@url.Id</td>
                        <td>@url.OriginalUrl</td>
                        <td>
                            <a href="@url.ShortenedUrl" target="_blank" class="text-decoration-none">
                                @url.ShortenedUrl
                            </a>
                        </td>
                        <td>
                            <button class="btn btn-warning btn-sm mx-1" @onclick="() => EditarUrl(url)">✏️ Editar</button>
                            <button class="btn btn-danger btn-sm mx-1" @onclick="() => EliminarUrl(url.Id)">🗑️ Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <!-- Formulario para agregar/editar -->
    <div class="card mt-4 shadow-lg">
        <div class="card-body">
            <h3 class="text-center">@((editando ? "✏️ Editar" : "➕ Agregar") + " URL")</h3>
            
            <div class="mb-3">
                <label class="form-label fw-bold">URL Original:</label>
                <input @bind="nuevaUrl.OriginalUrl" class="form-control" placeholder="Ejemplo: https://example.com" />
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">URL Acortada:</label>
                <input @bind="nuevaUrl.ShortenedUrl" class="form-control" placeholder="Ejemplo: https://short.ly/abc123" />
            </div>

            <div class="d-flex justify-content-between">
                <button class="btn btn-primary" @onclick="GuardarUrl">💾 Guardar</button>
                @if (editando)
                {
                    <button class="btn btn-secondary" @onclick="CancelarEdicion">❌ Cancelar</button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private UrlMapeada[]? urls;
    private UrlMapeada nuevaUrl = new();
    private bool editando = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarUrls();
    }

    private async Task CargarUrls()
    {
        urls = await Http.GetFromJsonAsync<UrlMapeada[]>("api/shorturl");
    }

    private async Task GuardarUrl()
    {
        if (editando)
        {
            await Http.PutAsJsonAsync($"api/shorturl/{nuevaUrl.Id}", nuevaUrl);
        }
        else
        {
            await Http.PostAsJsonAsync("api/shorturl", nuevaUrl);
        }

        nuevaUrl = new UrlMapeada();
        editando = false;
        await CargarUrls();
    }

    private void EditarUrl(UrlMapeada url)
    {
        nuevaUrl = new UrlMapeada
        {
            Id = url.Id,
            OriginalUrl = url.OriginalUrl,
            ShortenedUrl = url.ShortenedUrl
        };
        editando = true;
    }

    private void CancelarEdicion()
    {
        nuevaUrl = new UrlMapeada();
        editando = false;
    }

    private async Task EliminarUrl(int id)
    {
        await Http.DeleteAsync($"api/shorturl/{id}");
        await CargarUrls();
    }

    public class UrlMapeada
    {
        public int Id { get; set; }
        public string OriginalUrl { get; set; } = string.Empty;
        public string ShortenedUrl { get; set; } = string.Empty;
    }
}
